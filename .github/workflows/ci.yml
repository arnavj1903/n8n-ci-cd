name: CI Pipeline
on:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'Commit SHA'
        required: true
      webhook_id:
        description: 'Webhook delivery ID'
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.commit_sha || github.sha }}
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with pylint
        run: |
          pylint app.py test_app.py || true

      - name: Test with unittest
        run: |
          python -m unittest test_app.py

      - name: Login to dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push to dockerhub
        uses: docker/build-push-action@v5
        with:
          context:
          push: true
          tags: arnavj1903/disease-prediction-system:latest
      
      - name: Notify n8n on success
        if: success()
        run: |
          curl -X POST "${{ secrets.N8N_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d '{
              "repository": "${{ github.repository }}",
              "branch": "${{ github.ref_name }}",
              "commit_sha": "${{ github.sha }}",
              "status": "success",
              "run_id": "${{ github.run_id }}",
              "webhook_id": "${{ github.event.inputs.webhook_id }}",
              "run_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }'
      
      - name: Notify n8n on failure
        if: failure()
        run: |
          curl -X POST "${{ secrets.N8N_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d '{
              "repository": "${{ github.repository }}",
              "branch": "${{ github.ref_name }}",
              "commit_sha": "${{ github.sha }}",
              "status": "failure",
              "run_id": "${{ github.run_id }}",
              "webhook_id": "${{ github.event.inputs.webhook_id }}",
              "run_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }'
